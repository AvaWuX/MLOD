model_config {
    model_name: 'mlod_model'
    checkpoint_name: 'mlod_fpn_people'

    input_config {
        bev_depth: 6
        img_depth: 3

        img_dims_w: 1200
        img_dims_h: 352
    }

    rpn_config {
        rpn_proposal_roi_crop_size: 3
        rpn_fusion_method: 'mean'
        rpn_train_nms_size: 1024
        rpn_test_nms_size: 1024
        rpn_nms_iou_thresh: 0.8
	multi_check: True
	cls_reg_separated: True
    }

    mlod_config {
        mlod_proposal_roi_crop_size: 8
        mlod_positive_selection: 'not_bkg'
        mlod_nms_size: 100
        mlod_nms_iou_thresh: 0.15
        mlod_box_representation: 'box_4ca'
	apply_occ_mask: True
        offsets_ratio: False
	occ_quantile_level: 0.5
    }

    label_smoothing_epsilon: 0.001
    expand_proposals_xz: 0.0
    # To disable path drop, set both to 1.0
    path_drop_probabilities: [0.9, 0.9]
    BEV_freeze_probability: 0.0
    train_on_all_samples: False
    eval_all_samples: True
    reg_var: 0.5
    image_channel_indices: [1]
    image_layer_extract:['vgg_16/conv4/conv4_3']

    layers_config {
        bev_feature_extractor {
            bev_vgg_pyr {
                vgg_conv1: [2, 32]
                vgg_conv2: [2, 64]
                vgg_conv3: [3, 128]
                vgg_conv4: [3, 256]
                l2_weight_decay: 0.0005
            }
            # bev_vgg {
            #     vgg_conv1: [2, 32]
            #     vgg_conv2: [2, 64]
            #     vgg_conv3: [3, 128]
            #     vgg_conv4: [3, 256]
            #     upsampling_multiplier: 4
            #     l2_weight_decay: 0.0005
            # }
        }
        img_feature_extractor {
            img_vgg_pyr2 {
                vgg_conv1: [2, 64]
                vgg_conv2: [2, 128]
                vgg_conv3: [3, 256]
                vgg_conv4: [3, 512]
		vgg_conv5: [3, 512] 
                l2_weight_decay: 0.0005
            }
            # img_vgg {
            #     vgg_conv1: [2, 32]
            #     vgg_conv2: [2, 64]
            #     vgg_conv3: [3, 128]
            #     vgg_conv4: [3, 256]
            #     upsampling_multiplier: 4
            #     l2_weight_decay: 0.0005
            # }
        }

        rpn_config {
            cls_fc6: 256
            cls_fc7: 256
            reg_fc6: 256
            reg_fc7: 256
            l2_weight_decay: 0.0005
            keep_prob: 0.5
	    cls_input_weights: [1.0, 0.0] # [weights_bev, weights_img]
	    reg_input_weights: [1.0, 0.0] # [weights_bev, weights_img]
        }
        mlod_config {
            # basic_fc_layers {
            #     num_layers: 3
            #     layer_sizes: [2048, 2048, 2048]
            #     l2_weight_decay: 0.005
            #     keep_prob: 0.5
            #     fusion_method: 'mean'  # 'mean' or 'concat'
            # }
	    cls_input_weights: [1.0, 1.0] # [weights_bev, weights_img]
	    reg_input_weights: [1.0, 1.0] # [weights_bev, weights_img]
            fusion_fc_layers {
                num_layers: 3
                layer_sizes: [2048, 2048, 2048]
                l2_weight_decay: 0.005
                keep_prob: 0.5
                fusion_method: 'mean'  # 'mean' or 'concat'
                fusion_type: 'early'  # 'early', 'late', 'deep'	
            }
        }
    }

    # Loss function weights
    loss_config {
        cls_loss_weight: 1.0
        reg_loss_weight: 5.0
        ang_loss_weight: 1.0
	sub_cls_loss_weight: 1.0
	sub_reg_loss_weight: 0.0 
   }
}

train_config {

    batch_size: 1
    load_vgg_weights: True
    vgg_checkpoint_dir: './mlod/data/vgg_16'

    optimizer {
        adam_optimizer {
            learning_rate {
                exponential_decay_learning_rate {
                    initial_learning_rate: 0.0001
                    decay_steps: 30000
                    decay_factor: 0.8
                }
            }
        }
    }

    overwrite_checkpoints: False

    max_checkpoints_to_keep: 10000
    max_iterations: 150000
    checkpoint_interval: 1000
    summary_interval: 10
    summary_histograms: False
    summary_img_images: False
    summary_bev_images: False

    allow_gpu_mem_growth: True
}

eval_config {
    eval_interval: 2000
    eval_mode: 'val'
    ckpt_indices: -1
    evaluate_repeatedly: True

    allow_gpu_mem_growth: True
    evaluation_fraction: 1.0
}

dataset_config {
    name: 'kitti'

    # dataset_dir: '~/Kitti/object'
    # data_split: 'train'

    data_split_dir: 'training'
    has_labels: True

    cluster_split: 'train'
    classes: ['Pedestrian', 'Cyclist']
    num_clusters: [1,1]

    bev_source: 'lidar'
    add_depth: False
    aug_list: ['flipping', 'pca_jitter']
    aug_img_noise: True

    kitti_utils_config {
        area_extents: [-40, 40, -5, 3, 0, 70]
        voxel_size: 0.1
        anchor_strides: [0.3, 0.3, 0.3, 0.3]
        density_threshold: 1

        bev_generator {
            # height_priors {
            #    ground_filter_offset: -0.2
            #    offset_filter_distance: 2.0
            #   std_dev_multiplier: 2.0
            # }
            slices {
                height_lo: -0.2
                height_hi: 2.3
                num_slices: 5
            }
        }

        mini_batch_config {
            density_threshold: 1

            rpn_config {
                 iou_2d_thresholds {
                    neg_iou_lo: 0.0
                    neg_iou_hi: 0.3
                    pos_iou_lo: 0.4
                    pos_iou_hi: 1.0
                 }
                #iou_3d_thresholds {
                #    neg_iou_lo: 0.0
                #    neg_iou_hi: 0.3
                #    pos_iou_lo: 0.4
                #    pos_iou_hi: 1.0
                #}

                mini_batch_size: 512
            }

	    rpn_img_config {
                 iou_2d_thresholds {
                    neg_iou_lo: 0.0
                    neg_iou_hi: 0.4
                    pos_iou_lo: 0.6
                    pos_iou_hi: 1.0
           	}
		mini_batch_size: 512
	    }

            mlod_config {
                iou_2d_thresholds {
                    neg_iou_lo: 0.0
                    neg_iou_hi: 0.4
                    pos_iou_lo: 0.45
                    pos_iou_hi: 1.0
                }

                mini_batch_size: 1024
            }

	    mlod_img_config {
                iou_2d_thresholds {
                    neg_iou_lo: 0.0
                    neg_iou_hi: 0.4
                    pos_iou_lo: 0.6
                    pos_iou_hi: 1.0
                }

                mini_batch_size: 1024
            }
        }
    }
}
